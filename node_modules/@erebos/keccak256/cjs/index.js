"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.hash = hash;
exports.pubKeyToAddress = pubKeyToAddress;

var _hex = require("@erebos/hex");

var _jsSha = _interopRequireDefault(require("js-sha3"));

function hash(value) {
  return _jsSha.default.keccak256.array(value);
}

function pubKeyToAddress(pubKey) {
  var key = Array.isArray(pubKey) ? pubKey : _hex.Hex.from(pubKey).toBuffer(); // If key is 65-byte long, first byte should be removed

  var value = key.length === 65 ? key.slice(1) : key; // Ethereum address is the last 20 bytes of the hashed public key

  var address = Buffer.from(hash(value).slice(-20));
  return _hex.Hex.from(address).value;
}